

<splitSection output="output/convertUnit_section.jade">

  section.sec-convertUnit
    h3 Convert Unit
    h5 Convert css size units.<br>Some conversions are relative to browser defaults such as 16px for font-size.



    <br><br>
    .fw-resizable.fw-example.fw-copy.c-elements.demo-converts
      //- iframe(src='../demos/convertUnit_demo.html')


      p.fw-ellipsis.px-px <b>10px to [px]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-em <b>11px to [em]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-ex <b>12px to [ex]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-ch <b>13px to [ch]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-rem <b>14px to [rem]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-vw <b>15px to [vw]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-vh <b>16px to [vh]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-vmin <b>17px to [vmin]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-vmax <b>18px to [vmax]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-proc <b>19px to [%]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-cm <b>20px to [cm]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-mm <b>21px to [mm]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-in <b>22px to [in]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-pt <b>23px to [pt]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.
      p.fw-ellipsis.px-pc <b>24px to [pc]</b> Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras fringilla ornare commodo. Ut suscipit aliquet quam, ut sodales enim aliquet vel.

    .fw-separator
      span Units
    .fw-container
      P px,
        | em,
        | ex,
        | ch,
        | rem,
        | vw,
        | vh,
        | vmin,
        | vmax,
        | %,
        | cm,
        | mm,
        | in,
        | pt,
        | pc


    .fw-separator
      span Semantic usage

    .fw-code.scss
      :code
        .my-element {
          font-size: fw-convert(2rem, px); // returns 32px
        }
    p syntax: fw-convert(<b> input value </b>, <b> output unit </b>);



</splitSection>


<splitSection output="output/convertUnit_demo.jade">

//- block meta
//-   link(rel="stylesheet", href="../assets/css/demos/demo.css" id="mainstyle")
//-   link(rel="stylesheet", href="./convertUnit_demo.css" id="mainstyle")

//- block title
//-   title convertUnit Demo

//- block content
//-   .convertUnit-demo
//-     span demo content
//-     span demo content
//-     span demo content

</splitSection>


<splitSection output="output/convertUnit_section.scss">

.sec-convertUnit {
  .demo-converts {
    p {
      line-height: 1.2;
      margin: 3px;
      color: #333;

    }
    .px-px {font-size:   fw-convert(10px, px)}
    .px-em {font-size:   fw-convert(11px, em)}
    .px-ex {font-size:   fw-convert(12px, ex)}
    .px-ch {font-size:   fw-convert(13px, ch)}
    .px-rem {font-size:  fw-convert(14px, rem)}
    .px-vw {font-size:   fw-convert(15px, vw)}
    .px-vh {font-size:   fw-convert(16px, vh)}
    .px-vmin {font-size: fw-convert(17px, vmin)}
    .px-vmax {font-size: fw-convert(18px, vmax)}
    .px-proc {font-size: fw-convert(19px, %)}
    .px-cm {font-size:   fw-convert(20px, cm)}
    .px-mm {font-size:   fw-convert(21px, mm)}
    .px-in {font-size:   fw-convert(22px, in)}
    .px-pt {font-size:   fw-convert(23px, pt)}
    .px-pc {font-size:   fw-convert(24px, pc)}
  }
}

</splitSection>


<splitSection output="output/convertUnit_semantic.scss">


// convert-unit function
// usage: convert-unit( inputValue, outputUnit )
// example: convert-unit(32px, rem);

// source: http://hugogiraudel.com/2014/01/15/sass-string-to-number/
@function fw_length($number, $unit) {
  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;
  $index: index($strings, $unit);
  @if not $index {
    @warn "Unknown unit `#{$unit}`.";
    @return false;
  }
  @return $number * nth($units, $index);
}

@function fw-strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function fw-convert(
  $value,
  $outputUnit: px
){
  // default unit sizes measured in px for 1920x1200 (imac 24') screen
  // http://www.w3schools.com/browsers/browsers_display.asp
  // http://www.w3schools.com/cssref/css_units.asp
  $units: (
    px:   1,
    em:   16,
    ex:   9.12656,
    ch:   9.78827,
    rem:  16,
    vw:   17.4545,
    vh:   9.86364,
    vmin: 9.86364,
    vmax: 17.4545,
    "%":    0.16,
    cm:   37.7953,
    mm:   3.77953,
    in:   96,
    pt:   1.33333,
    pc:   16
  );

  // check if input value is a number
  @if type-of($value) == number {
    $inputUnit: unit($value);

    // define variable for value to px conversion
    $pxValue: 1;

    // define variable for px to output value conversion
    $outputValue: 1px;

    // if input value was unitless, convert it to pixels
    @if unitless($value){
      $value: $value * 1px;
    }

    // convert input value to px units
    // @each Key, Value in Map
    @each $keyUnit, $size in $units {
      @if $inputUnit == $keyUnit {
        $pxValue: fw-strip-unit($value) * $size;
      }
    }

    // convert pxValue to output value
    @each $keyUnit, $size in $units {
      @if $outputUnit == $keyUnit {
        $outputValue: fw_length($pxValue / $size,  $outputUnit);
      }
    }

    @return $outputValue;
  }

  // return communicate when $value is not a number
  @return "value must be a number";
}

</splitSection>

